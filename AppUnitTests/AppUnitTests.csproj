<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0-windows7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="6.0.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="FluentAssertions" Version="8.0.1" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.13.0" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DDEUnitTestDataProject\DDEUnitTestDataProject.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="Xunit" />
  </ItemGroup>

	<Target Name="Coverage" AfterTargets="Test">
		<!-- Nettoyage des anciens rapports -->
		<Exec Command="dotnet clean" />
		<!-- Exécution des tests avec collecte de la couverture -->
		<Exec Command="dotnet test --collect:'XPlat Code Coverage'" />
		<!-- Génération du rapport HTML + Badge -->
		<Exec Command="reportgenerator -reports:TestResults/*/coverage.cobertura.xml -targetdir:CoverageReport -reporttypes:Html;Badges" />
	</Target>

	<Target Name="CleanCoverage" BeforeTargets="Clean">
		<!-- Nettoyage des anciens rapports sauf les résultats de couverture -->
		<Exec Command="Remove-Item -Recurse -Force CoverageReport" ContinueOnError="true"/>
		<Exec Command="Remove-Item -Recurse -Force TestResults/* -Exclude *.cobertura.xml" ContinueOnError="true"/>
	</Target>



</Project>
